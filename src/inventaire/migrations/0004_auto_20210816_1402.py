# Generated by Django 3.2.5 on 2021-08-16 12:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import inventaire.models
import tinymce.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('inventaire', '0003_site'),
    ]

    operations = [
        migrations.CreateModel(
            name='AffectationAgent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fonction', models.CharField(max_length=124)),
            ],
            options={
                'verbose_name': "Affectation de l'Agent",
                'verbose_name_plural': "Affectations de l'Agent",
            },
        ),
        migrations.CreateModel(
            name='Batiment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('composition', models.CharField(choices=[('C', 'COMPLEXE'), ('E', 'ELEMENTAIRE'), ('P', 'PARTIEL')], help_text="Déomposition de l'élément de structure spatiale", max_length=1, verbose_name='Composition')),
                ('id_regional', models.CharField(help_text='Numéro de séquence unique fournie par les Régions', max_length=175)),
                ('nom', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nom usuel')),
                ('desc', models.CharField(blank=True, help_text='Courte description du bâtiment', max_length=255, null=True)),
                ('shape_area', models.FloatField(blank=True, help_text="Superficie graphique du bâtiment, exprimée en m², fournie par l'ADGP", null=True)),
                ('slug', models.SlugField(blank=True, editable=False, max_length=255, unique=True)),
                ('nbr_niveau', models.PositiveSmallIntegerField(blank=True, default=1, help_text='Sous-sol compris')),
                ('annee_cstr', models.PositiveSmallIntegerField(blank=True, default=1976, verbose_name='Année de construction')),
                ('created_by', models.ForeignKey(blank=True, default=None, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inventaire_batiment_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, default=None, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inventaire_batiment_modified', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('parcel__site__voirie',),
            },
        ),
        migrations.CreateModel(
            name='CompteurOfficiel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('voirie', models.CharField(blank=True, help_text='En toutes lettres. Les noms de rue ne doivent inclure AUCUNE autre note ou information, telle que les noms de la sous-commune, etc.', max_length=255, null=True, verbose_name='Voirie')),
                ('numero', models.CharField(blank=True, help_text='Si 2 séries de chiffres distincts, utiliser tiret (« - »)', max_length=21, null=True, verbose_name='Numéro')),
                ('boite', models.CharField(blank=True, max_length=7, null=True, verbose_name='boîte')),
                ('localite', models.CharField(blank=True, help_text='La localité, et non pas la commune.', max_length=124, null=True, verbose_name='Localité')),
                ('cp', models.CharField(blank=True, help_text='4 chiffres, pas d’initiale de pays,ni de code ISO', max_length=6, null=True, verbose_name='Code postal')),
                ('region', models.CharField(blank=True, choices=[('BE-VLG', 'Flandre'), ('BE-BRU', 'Bruxelles'), ('BE-WAL', 'Wallonie')], max_length=6, null=True, verbose_name='Région')),
                ('latitude', models.FloatField(default=0, editable=False)),
                ('longitude', models.FloatField(default=0, editable=False)),
                ('commune', models.CharField(blank=True, editable=False, max_length=100, null=True)),
                ('infomsg', models.CharField(blank=True, editable=False, max_length=275, null=True)),
                ('is_best', models.BooleanField(default=False, editable=False)),
                ('X', models.FloatField(default=0, editable=False)),
                ('Y', models.FloatField(default=0, editable=False)),
                ('fluide', models.CharField(choices=[('E', 'Electricité'), ('G', 'Gaz'), ('M', 'Mazout'), ('O', 'Eau')], max_length=1)),
                ('tarif', models.IntegerField(choices=[(1, 'Mono-horaire'), (2, 'Bi-horaire'), (3, 'Exclusif Nuit')], default=1)),
                ('releve', models.CharField(choices=[('YMR', 'Annuel'), ('MMR', 'Mensuel'), ('AMR', 'Continu')], max_length=3)),
                ('debit', models.CharField(blank=True, choices=[('HT', 'Haute tension'), ('BT', 'Basse tension'), ('HP', 'Haute pression'), ('BP', 'Basse pression')], max_length=2, null=True)),
                ('identifiant', models.CharField(max_length=25, unique=True)),
                ('grd', models.CharField(blank=True, choices=[('ORS', 'ORES'), ('RS', 'RESA'), ('SBLG', 'SIBELGA'), ('VVQ', 'VIVAQUA'), ('AIEG', 'AIEG'), ('AIESH', 'AIESH'), ('FLVS', 'FLUVIUS'), ('REW', 'REW'), ('SBLGS', 'SIBELGAS'), ('SWD', 'SWDwE')], max_length=10, null=True)),
                ('slug', models.SlugField(editable=False, max_length=120)),
                ('created_by', models.ForeignKey(blank=True, default=None, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inventaire_compteurofficiel_created', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Compteurs Officiels',
            },
        ),
        migrations.CreateModel(
            name='TypeMesureSurface',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(help_text='Nom complet', max_length=124)),
                ('desc', models.CharField(blank=True, help_text='Courte description', max_length=248)),
                ('acronyme', models.CharField(blank=True, max_length=64)),
            ],
            options={
                'ordering': ('nom',),
            },
        ),
        migrations.RemoveField(
            model_name='site',
            name='desc_autre_usage',
        ),
        migrations.RemoveField(
            model_name='site',
            name='nom_autre_usage',
        ),
        migrations.RemoveField(
            model_name='site',
            name='usage',
        ),
        migrations.AlterField(
            model_name='site',
            name='created_by',
            field=models.ForeignKey(blank=True, default=None, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inventaire_site_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='site',
            name='voirie',
            field=models.CharField(blank=True, help_text='En toutes lettres. Les noms de rue ne doivent inclure AUCUNE autre note ou information, telle que les noms de la sous-commune, etc.', max_length=255, null=True, verbose_name='Voirie'),
        ),
        migrations.CreateModel(
            name='Releve',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('debut_periode', models.DateTimeField()),
                ('fin_periode', models.DateTimeField()),
                ('quantite', models.DecimalField(decimal_places=2, help_text="En litre si c'est du mazout ou de l'eau, en kWh sinon", max_digits=12, null=True, verbose_name='Quantité consommée')),
                ('tarif', models.CharField(choices=[('Lo', 'Low'), ('Hi', 'High'), ('Th', 'Total Hours')], max_length=3)),
                ('compteur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='releves', to='inventaire.compteurofficiel')),
                ('created_by', models.ForeignKey(blank=True, default=None, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inventaire_releve_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, default=None, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inventaire_releve_modified', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Rapport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('titre', models.CharField(help_text='Titre court et explicite', max_length=100)),
                ('description', models.CharField(help_text='Courte description', max_length=200)),
                ('contenu', tinymce.models.HTMLField()),
                ('created_by', models.ForeignKey(blank=True, default=None, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inventaire_rapport_created', to=settings.AUTH_USER_MODEL)),
                ('groupe', models.ManyToManyField(related_name='elements', to='inventaire.Site', verbose_name="Sites d'intervention")),
                ('modified_by', models.ForeignKey(blank=True, default=None, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inventaire_rapport_modified', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Parcelle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('capakey', models.CharField(blank=True, help_text="Le CaPaKey se compose toujours de 17 caractères, '/' compris.", max_length=17, null=True, verbose_name='CaPaKey')),
                ('patris', models.FloatField(blank=True, help_text='Superficie de la parcelle, comme indiquée dans la documentation patrimoniale.', null=True, verbose_name='Contenance PATRIS (m²)')),
                ('nature', models.CharField(blank=True, help_text='Nature cadastrale de la parcelle concernée', max_length=50, null=True, verbose_name='Nature')),
                ('slug', models.SlugField(editable=False, max_length=255, unique=True)),
                ('division', models.CharField(default='11111', editable=False, max_length=5)),
                ('section', models.CharField(default='A', editable=False, max_length=1)),
                ('radical', models.CharField(default='2222', editable=False, max_length=4)),
                ('bis', models.CharField(default='33', editable=False, max_length=2)),
                ('exposant', models.CharField(default='A', editable=False, max_length=1)),
                ('puissance', models.CharField(default='444', editable=False, max_length=3)),
                ('droit', models.CharField(choices=[('P', 'Propriété'), ('L', 'Location'), ('E', 'Emphytéose'), ('SPABS', 'SPABS'), ('CP', 'CoPropriété'), ('CS', 'CoSuperficaire'), ('MD', 'Mise à Disposition'), ('I', 'Inconnue')], max_length=6, verbose_name='Situation patrimoniale')),
                ('created_by', models.ForeignKey(blank=True, default=None, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inventaire_parcelle_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, default=None, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inventaire_parcelle_modified', to=settings.AUTH_USER_MODEL)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parcelles', to='inventaire.site', verbose_name='Site')),
            ],
            options={
                'ordering': ('site', 'capakey'),
            },
        ),
        migrations.CreateModel(
            name='Organisation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('gsm', models.CharField(blank=True, max_length=15, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('homepage', models.URLField(blank=True, null=True)),
                ('nom', models.CharField(help_text="Nom complet de l'Organisation", max_length=255)),
                ('slug', models.SlugField(editable=False, max_length=255, unique=True)),
                ('bce_ne', models.CharField(blank=True, help_text='Dix chiffres, sans les points', max_length=10, verbose_name='Numéro BCE')),
                ('fase', models.PositiveIntegerField(blank=True, help_text='n°FASE, si établissement scolaire', null=True)),
                ('created_by', models.ForeignKey(blank=True, default=None, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inventaire_organisation_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, default=None, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inventaire_organisation_modified', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Occupation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name="Nom donné à l' occupation")),
                ('bce_ue', models.CharField(blank=True, help_text='Dix chiffres, sans les points', max_length=10, verbose_name="Numéro d'établissement BCE")),
                ('created_by', models.ForeignKey(blank=True, default=None, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inventaire_occupation_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, default=None, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inventaire_occupation_modified', to=settings.AUTH_USER_MODEL)),
                ('orga', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='occupants', to='inventaire.organisation', verbose_name='Occupant')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='occupations', to='inventaire.site', verbose_name="Site d'implantation")),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Niveau',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('composition', models.CharField(choices=[('C', 'COMPLEXE'), ('E', 'ELEMENTAIRE'), ('P', 'PARTIEL')], help_text="Déomposition de l'élément de structure spatiale", max_length=1, verbose_name='Composition')),
                ('nom', models.CharField(max_length=215, verbose_name='Nom usuel')),
                ('desc', models.CharField(max_length=200)),
                ('batiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='niveaux', to='inventaire.batiment')),
                ('created_by', models.ForeignKey(blank=True, default=None, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inventaire_niveau_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, default=None, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inventaire_niveau_modified', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Niveaux',
            },
        ),
        migrations.CreateModel(
            name='MesureSurface',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('valeur', models.FloatField(help_text='Valeur en m²')),
                ('batiment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='batiments', to='inventaire.batiment')),
                ('created_by', models.ForeignKey(blank=True, default=None, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inventaire_mesuresurface_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, default=None, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inventaire_mesuresurface_modified', to=settings.AUTH_USER_MODEL)),
                ('niveau', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='niveaux', to='inventaire.niveau')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='typologie', to='inventaire.typemesuresurface')),
            ],
            options={
                'verbose_name_plural': 'Mesures de surface',
            },
        ),
        migrations.CreateModel(
            name='Memo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('contenu', tinymce.models.HTMLField(verbose_name='Memorandum')),
                ('sujet', models.CharField(choices=[('S', 'Site proprement dit'), ('C', 'Construction'), ('T', 'Terrain'), ('E', 'Point de Fourniture Energétique'), ('R', 'Relevé'), ('F', 'Facture'), ('O', 'Occupant'), ('P', 'Personne'), ('A', 'Autre')], default='S', max_length=1, verbose_name='Element du site concerné')),
                ('slug', models.SlugField(editable=False, max_length=255, unique=True)),
                ('created_by', models.ForeignKey(blank=True, default=None, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inventaire_memo_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, default=None, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inventaire_memo_modified', to=settings.AUTH_USER_MODEL)),
                ('site', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='inventaire.site', verbose_name='Site objet du memo')),
            ],
            options={
                'ordering': ('created',),
            },
        ),
        migrations.CreateModel(
            name='DocumentSite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('doc', models.FileField(max_length=255, upload_to=inventaire.models.get_doc_filename, verbose_name='Document')),
                ('created_by', models.ForeignKey(blank=True, default=None, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inventaire_documentsite_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, default=None, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inventaire_documentsite_modified', to=settings.AUTH_USER_MODEL)),
                ('site', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='inventaire.site')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='compteurofficiel',
            name='livraison',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='site', to='inventaire.site'),
        ),
        migrations.AddField(
            model_name='compteurofficiel',
            name='modified_by',
            field=models.ForeignKey(blank=True, default=None, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inventaire_compteurofficiel_modified', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='batiment',
            name='parcel',
            field=models.ForeignKey(help_text='Sélectionner le terrain sur lequel se trouve le bâtiment', on_delete=django.db.models.deletion.CASCADE, related_name='constructions', to='inventaire.parcelle'),
        ),
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('gsm', models.CharField(blank=True, max_length=15, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('homepage', models.URLField(blank=True, null=True)),
                ('genre', models.CharField(choices=[('M', 'Monsieur'), ('F', 'Madame'), ('X', 'Non précisé')], max_length=1)),
                ('nom', models.CharField(max_length=225)),
                ('prenom', models.CharField(max_length=124)),
                ('slug', models.SlugField(editable=False, max_length=255, unique=True)),
                ('site', models.ManyToManyField(through='inventaire.AffectationAgent', to='inventaire.Site')),
            ],
            options={
                'ordering': ('nom',),
            },
        ),
        migrations.AddField(
            model_name='affectationagent',
            name='agent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventaire.agent'),
        ),
        migrations.AddField(
            model_name='affectationagent',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventaire.site'),
        ),
        migrations.AddConstraint(
            model_name='parcelle',
            constraint=models.UniqueConstraint(fields=('capakey',), name='capakey_unique'),
        ),
        migrations.AddConstraint(
            model_name='affectationagent',
            constraint=models.UniqueConstraint(fields=('agent', 'site'), name='affectation_unique'),
        ),
    ]
